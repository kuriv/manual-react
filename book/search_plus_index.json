{"./":{"url":"./","title":"React","keywords":"","body":"React React 是一个用于构建用户界面的 JavaScript 框架。 "},"docs/安装与使用.html":{"url":"docs/安装与使用.html","title":"安装与使用","keywords":"","body":"安装与使用 首先，准备好一个容器。 Hello React 然后，依次引入 React 所需的核心库文件。 最后，渲染一个简单的虚拟 DOM 到刚才创建好的容器中。 const App = Hello React; ReactDOM.render(App, document.getElementById('app')); 现在，即可打开浏览器查看效果。 "},"docs/React Devtools.html":{"url":"docs/React Devtools.html","title":"React Devtools","keywords":"","body":"React Devtools "},"docs/JSX 语法规则.html":{"url":"docs/JSX 语法规则.html","title":"JSX 语法规则","keywords":"","body":"JSX 语法规则 注意，定义虚拟 DOM 的代码不能使用引号包起来，否则，以下代码将会作为字符串渲染输出。 const App = 'Hello React'; ReactDOM.render(App, document.getElementById('app')); 虚拟 DOM 必须只有一个根标签，否则，以下代码将会报错。 const App = ( Hello React ); ReactDOM.render(App, document.getElementById('app')); 如果虚拟 DOM 中有自闭合标签，则必须闭合。 const App = ; ReactDOM.render(App, document.getElementById('app')); 如果在虚拟 DOM 中使用大写字母开头的标签，则 React 默认会将其作为组件渲染输出。如果使用小写字母开头的标签，则 React 默认会将其作为 HTML 同名标签渲染输出，当 HTML 标签中不存在同名标签时，以下代码将会报错。 const App = Hello React; ReactDOM.render(App, document.getElementById('app')); 如果要在虚拟 DOM 中混入 Javascript 表达式，则需要使用大括号。 let foo = 'bar'; const App = Hello React; ReactDOM.render(App, document.getElementById('app')); 如果需要指定类名，则不能使用 class 关键字，而是使用 className 关键字。 let foo = 'bar'; const App = Hello React; ReactDOM.render(App, document.getElementById('app')); 如果要在虚拟 DOM 中使用内联样式，则需要使用双大括号，且样式属性名遵循小驼峰命名规则。 const App = Hello React; ReactDOM.render(App, document.getElementById('app')); "}}